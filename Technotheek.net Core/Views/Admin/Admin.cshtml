@model Technotheek.net_Core.ViewModels.SongCreateViewModel

@{
    ViewBag.Title = "Admin";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var rooms = ViewBag.Rooms as IEnumerable<Technotheek.net_Core.LOGIC.RoomContainer>;
}

@{
    var unaddedEmployees = ViewBag.UnaddedEmployees as IEnumerable<Technotheek.net_Core.Models.Employee>;
}

@{
    var roomSizes = ViewBag.RoomSize as List<Technotheek.net_Core.Models.Room>;
}

@{
    var Room = "Room";
    var employeesUnadded = "Unadded Employees";
}


@{
    int i = 0;
}


<h2>Add new song</h2>

<form enctype="multipart/form-data" asp-controller="Admin" asp-action="Upload"
      method="post" class="mt-3">
    <div class="form-group">
        <div class="custom-file">
            <div class="custom-file">
                <input asp-for="Song" class="form-control custom-file-input">
                <label class="custom-file-label">Choose File...</label>
            </div>
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-6">
            <label>Name the song:</label>
            <input type="text" asp-for="Name" class="form-control">
            <span asp-validation-for="Name"></span>
            <small class="form-text text-muted"></small>
        </div>
        <div class="form-group col-md-6">
            <label>Artist</label>
            <input type="text" asp-for="Artist" class="form-control">
            <span asp-validation-for="Artist"></span>
            <small class="form-text text-muted"></small>
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-6">
            <label>Genre</label>
            <input type="text" asp-for="Genre" class="form-control">
            <span asp-validation-for="Genre"></span>
            <small class="form-text text-muted"></small>
        </div>
        <div class="form-group col-md-6">
            <label>Album</label>
            <input type="text" asp-for="Album" class="form-control">
            <span asp-validation-for="Album"></span>
            <small class="form-text text-muted"></small>
        </div>
    </div>

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group row">
        <div class="col-sm-10">
            <button type="submit" class="btn btn-primary">Create</button>
        </div>
    </div>
</form>

<form asp-action="FillRooms" asp-controller="Admin">
    <button type="submit" class="btn btn-primary">Run Algorithm</button>
</form>

<p>
    <a asp-action="Create">Create New</a>
</p>


<table class="table table-bordered table-dark">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => Room)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (rooms != null && roomSizes != null)
        {

            @foreach (var item in rooms)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => roomSizes[i].buildingSpace)
                        @{
                            i = i + 1;
                        }
                    </td>
                    @foreach (Employee employee in item.ReturnEmployees())
                    {
                        <td>

                            @Html.DisplayFor(modelItem => employee.name) |
                            @Html.DisplayFor(modelItem => employee.employeeSpace) |
                            @Html.DisplayFor(modelItem => employee.functionType)
                        </td>
                    }
                    <td>
                        @Html.ActionLink("Open", "ViewEmployees", new { employees = Json.Serialize(item.ReturnEmployees()) })
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<table class="table table-bordered table-dark">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => employeesUnadded)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (unaddedEmployees != null)
        {

            @foreach (var item in unaddedEmployees)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.employeeSpace)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.functionType)
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@*<partial name="_AddEmployeeView" />*@


<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>

<script>
    $(document).ready(function () {
        $('.custom-file-input').on("change", function () {
            var fileName = $(this).val().split("\\").pop();
            $(this).next('.custom-file-label').html(fileName);
        });
    });
</script>

@if (ViewBag.SuccesOrNot != null)
{
    <script>

        alert(ViewBag.SuccesOrNot)

    </script>
}
